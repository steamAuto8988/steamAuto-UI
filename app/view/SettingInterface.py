# -*- coding: utf-8 -*-
from distutils.util import strtobool

from PyQt5 import QtCore, QtGui
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QWidget, QVBoxLayout
from qfluentwidgets import CardWidget, CheckBox, LineEdit, PushButton, TitleLabel, InfoBar, InfoBarPosition, \
    CaptionLabel

from app.config.config import ProxyConfig
from app.config.utils import setIniValue, getIniValue


# Form implementation generated from reading ui file '.\setting.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


class SettingInterface(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.vBoxLayout = QVBoxLayout(self)
        self.CardWidget = CardWidget()
        self.CardWidget.setGeometry(QtCore.QRect(10, 10, 551, 331))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setKerning(True)
        self.CardWidget.setFont(font)
        self.CardWidget.setObjectName("CardWidget")

        self.saveProxyConfig = PushButton(self.CardWidget)
        self.saveProxyConfig.setGeometry(QtCore.QRect(150, 260, 121, 61))
        self.saveProxyConfig.setObjectName("saveProxyConfig")
        self.TitleLabel = TitleLabel(self.CardWidget)
        self.TitleLabel.setGeometry(QtCore.QRect(10, 80, 131, 51))
        self.TitleLabel.setObjectName("TitleLabel")
        self.TitleLabel_2 = TitleLabel(self.CardWidget)
        self.TitleLabel_2.setGeometry(QtCore.QRect(10, 170, 131, 51))
        self.TitleLabel_2.setObjectName("TitleLabel_2")
        self.useProxy = CheckBox(self.CardWidget)
        self.useProxy.setGeometry(QtCore.QRect(150, 20, 121, 51))
        self.useProxy.setObjectName("useProxy")
        self.proxyPort = LineEdit(self.CardWidget)
        self.proxyPort.setGeometry(QtCore.QRect(150, 90, 131, 46))
        self.proxyPort.setMinimumSize(QtCore.QSize(0, 46))
        self.proxyPort.setObjectName("proxyPort")
        self.proxyAddress = LineEdit(self.CardWidget)
        self.proxyAddress.setGeometry(QtCore.QRect(150, 180, 181, 46))
        self.proxyAddress.setMinimumSize(QtCore.QSize(0, 46))
        self.proxyAddress.setObjectName("proxyAddress")

        self.goGIthub = PushButton(self.CardWidget)
        self.goGIthub.setGeometry(QtCore.QRect(850, 30, 191, 61))
        self.goGIthub.setObjectName("goGIthub")
        self.updateVersion = PushButton(self.CardWidget)
        self.updateVersion.setGeometry(QtCore.QRect(850, 120, 191, 61))
        self.updateVersion.setObjectName("updateVersion")

        self.TreadCardWidget = CardWidget()
        self.TreadCardWidget.setGeometry(QtCore.QRect(10, 350, 1111, 461))
        self.TreadCardWidget.setObjectName("TreadCardWidget")
        self.BuffAutoSendTradeOffer = CheckBox(self.TreadCardWidget)
        self.BuffAutoSendTradeOffer.setGeometry(QtCore.QRect(20, 20, 171, 41))
        self.BuffAutoSendTradeOffer.setObjectName("BuffAutoSendTradeOffer")
        self.UUAutoSendTradeOffer = CheckBox(self.TreadCardWidget)
        self.UUAutoSendTradeOffer.setGeometry(QtCore.QRect(20, 80, 171, 41))
        self.UUAutoSendTradeOffer.setObjectName("UUAutoSendTradeOffer")
        self.BuffAutoVerifyTradeOffer = CheckBox(self.TreadCardWidget)
        self.BuffAutoVerifyTradeOffer.setGeometry(QtCore.QRect(440, 20, 171, 41))
        self.BuffAutoVerifyTradeOffer.setObjectName("BuffAutoVerifyTradeOffer")
        self.UUAutoVerifyTradeOffer = CheckBox(self.TreadCardWidget)
        self.UUAutoVerifyTradeOffer.setGeometry(QtCore.QRect(440, 80, 171, 41))
        self.UUAutoVerifyTradeOffer.setObjectName("UUAutoVerifyTradeOffer")
        self.CaptionLabel = CaptionLabel(self.TreadCardWidget)
        self.CaptionLabel.setGeometry(QtCore.QRect(440, 120, 281, 131))
        self.CaptionLabel.setObjectName("CaptionLabel")
        self.CaptionLabel_2 = CaptionLabel(self.TreadCardWidget)
        self.CaptionLabel_2.setGeometry(QtCore.QRect(20, 130, 221, 131))
        self.CaptionLabel_2.setObjectName("CaptionLabel_2")

        self.retranslateUi()
        self.vBoxLayout.addWidget(self.CardWidget)
        self.vBoxLayout.addWidget(self.TreadCardWidget)

        self.saveProxyConfig.clicked.connect(self._saveProxyConfig)
        self.useProxy.clicked.connect(self._userProxy)

        # 自动发货按钮绑定
        self.BuffAutoSendTradeOffer.clicked.connect(self._saveBuffAutoSendTradeOffer)
        self.UUAutoSendTradeOffer.clicked.connect(self._saveUUAutoSendTradeOffer)

        # 自动同意报价按钮绑定
        self.BuffAutoVerifyTradeOffer.clicked.connect(self._saveBuffAutoVerifyTradeOffer)
        self.UUAutoVerifyTradeOffer.clicked.connect(self._saveUUAutoVerifyTradeOffer)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.saveProxyConfig.setText(_translate("Form", "保存代理配置"))
        self.TitleLabel.setText(_translate("Form", "代理端口："))
        self.TitleLabel_2.setText(_translate("Form", "代理地址："))
        self.useProxy.setText(_translate("Form", "使用代理"))

        self.BuffAutoSendTradeOffer.setText(_translate("Form", "BUFF 主动发送报价"))
        self.UUAutoSendTradeOffer.setText(_translate("Form", "UU 主动发送报价"))
        self.BuffAutoVerifyTradeOffer.setText(_translate("Form", "BUFF 自动确认报价"))
        self.UUAutoVerifyTradeOffer.setText(_translate("Form", "UU 自动确认报价"))
        self.CaptionLabel.setText(_translate("Form",
                                             "<html><head/><body><p><span style=\" font-weight:600;\">当BUFF或UU Cookie在有效期内，才会去查询BUFF</span></p><p><span style=\" font-weight:600;\">或UU平台上需要确认的报价的订单，当找到订单后，</span></p><p><span style=\" font-weight:600;\">会匹配订单的饰品的AssetId，确认后确定报价！</span></p></body></html>"))
        self.CaptionLabel_2.setText(_translate("Form",
                                               "<html><head/><body><p><span style=\" font-weight:600;\">当BUFF或UU Cookie在有效期内，</span></p><p><span style=\" font-weight:600;\">才会去查询BUFF或UU平台上需要主动</span></p><p><span style=\" font-weight:600;\">发起报价的订单，当找到订单后，会</span></p><p><span style=\" font-weight:600;\">匹配出售的饰品的AssetId进行发货！</span></p></body></html>"))
        self.goGIthub.setText(_translate("Form", "GITHUB"))
        self.updateVersion.setText(_translate("Form", "获取最新版"))

        self.proxyPort.setText(ProxyConfig.port)
        self.proxyAddress.setText(ProxyConfig.address)
        self.useProxy.setChecked(ProxyConfig.useProxy)

        # 自动发货按钮绑定
        self.BuffAutoSendTradeOffer.setChecked(
            bool(strtobool(getIniValue(key='buff_auto_send', section='tradeOffer', default='False'))))
        self.UUAutoSendTradeOffer.setChecked(
            bool(strtobool(getIniValue(key='uu_auto_send', section='tradeOffer', default='False'))))

        # 自动同意报价按钮绑定
        self.BuffAutoVerifyTradeOffer.setChecked(
            bool(strtobool(getIniValue(key='buff_auto_verify', section='tradeOffer', default='False'))))
        self.UUAutoVerifyTradeOffer.setChecked(
            bool(strtobool(getIniValue(key='uu_auto_verify', section='tradeOffer', default='False'))))

    # ########################################下面都是按钮绑定的处理 # ########################################

    def _saveProxyConfig(self):
        proxyAddress = self.proxyAddress.text()
        if proxyAddress is None or proxyAddress == '':
            InfoBar.error(
                title=f'保存代理配置',
                content=f'请填写代理地址',
                orient=Qt.Horizontal,
                isClosable=True,
                position=InfoBarPosition.TOP_RIGHT,
                # position='Custom',   # NOTE: use custom info bar manager
                duration=3000,
                parent=self
            )
            return
        proxyPort = self.proxyPort.text()
        if self.proxyPort.text() is None or self.proxyPort.text() == '':
            InfoBar.error(
                title=f'保存代理配置',
                content=f'请填写代理端口!',
                orient=Qt.Horizontal,
                isClosable=True,
                position=InfoBarPosition.TOP_RIGHT,
                # position='Custom',   # NOTE: use custom info bar manager
                duration=3000,
                parent=self
            )
            return
        setIniValue(key='proxyPort', section='proxyConfig', value=str(proxyPort))
        setIniValue(key='proxyAddress', section='proxyConfig', value=str(proxyAddress))
        InfoBar.success(
            title=f'保存代理配置',
            content=f'代理配置保存成功!',
            orient=Qt.Horizontal,
            isClosable=True,
            position=InfoBarPosition.TOP_RIGHT,
            # position='Custom',   # NOTE: use custom info bar manager
            duration=3000,
            parent=self
        )

    def _userProxy(self):
        msg = '不使用代理'
        if self.useProxy.isChecked():
            msg = '使用代理'
        InfoBar.warning(
            title=f'保存代理配置',
            content=msg,
            orient=Qt.Horizontal,
            isClosable=True,
            position=InfoBarPosition.TOP_RIGHT,
            # position='Custom',   # NOTE: use custom info bar manager
            duration=3000,
            parent=self
        )
        setIniValue(key='useProxy', section='proxyConfig', value=str(self.useProxy.isChecked()))

    def _saveBuffAutoSendTradeOffer(self):
        msg = 'BUFF自动发报价'
        if self.BuffAutoSendTradeOffer.isChecked() is False:
            msg = 'BUFF不自动发报价'
        InfoBar.success(
            title=f'发报价',
            content=msg,
            orient=Qt.Horizontal,
            isClosable=True,
            position=InfoBarPosition.TOP_RIGHT,
            # position='Custom',   # NOTE: use custom info bar manager
            duration=3000,
            parent=self
        )

        setIniValue(key='buff_auto_send', section='tradeOffer', value=str(self.BuffAutoSendTradeOffer.isChecked()))

    def _saveUUAutoSendTradeOffer(self):
        msg = 'UU自动发报价'
        if self.UUAutoSendTradeOffer.isChecked() is False:
            msg = 'UU不自动发报价'
        InfoBar.success(
            title=f'发报价',
            content=msg,
            orient=Qt.Horizontal,
            isClosable=True,
            position=InfoBarPosition.TOP_RIGHT,
            # position='Custom',   # NOTE: use custom info bar manager
            duration=3000,
            parent=self
        )
        setIniValue(key='uu_auto_send', section='tradeOffer', value=str(self.UUAutoSendTradeOffer.isChecked()))

    def _saveBuffAutoVerifyTradeOffer(self):
        msg = 'BUFF自动确认报价'
        if self.BuffAutoVerifyTradeOffer.isChecked() is False:
            msg = 'BUFF不自动确认报价'
        InfoBar.success(
            title=f'确认报价',
            content=msg,
            orient=Qt.Horizontal,
            isClosable=True,
            position=InfoBarPosition.TOP_RIGHT,
            # position='Custom',   # NOTE: use custom info bar manager
            duration=3000,
            parent=self
        )
        setIniValue(key='buff_auto_verify', section='tradeOffer', value=str(self.BuffAutoVerifyTradeOffer.isChecked()))

    def _saveUUAutoVerifyTradeOffer(self):
        msg = 'UU自动确认报价'
        if self.UUAutoVerifyTradeOffer.isChecked() is False:
            msg = 'UU不自动确认报价'
        InfoBar.success(
            title=f'确认报价',
            content=msg,
            orient=Qt.Horizontal,
            isClosable=True,
            position=InfoBarPosition.TOP_RIGHT,
            # position='Custom',   # NOTE: use custom info bar manager
            duration=3000,
            parent=self
        )
        setIniValue(key='uu_auto_verify', section='tradeOffer', value=str(self.UUAutoVerifyTradeOffer.isChecked()))
